// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	entity "github.com/abmid/icanvas-analytics/internal/report/entity"
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockReportResultUseCase is a mock of ReportResultUseCase interface
type MockReportResultUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockReportResultUseCaseMockRecorder
}

// MockReportResultUseCaseMockRecorder is the mock recorder for MockReportResultUseCase
type MockReportResultUseCaseMockRecorder struct {
	mock *MockReportResultUseCase
}

// NewMockReportResultUseCase creates a new mock instance
func NewMockReportResultUseCase(ctrl *gomock.Controller) *MockReportResultUseCase {
	mock := &MockReportResultUseCase{ctrl: ctrl}
	mock.recorder = &MockReportResultUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockReportResultUseCase) EXPECT() *MockReportResultUseCaseMockRecorder {
	return m.recorder
}

// CreateOrUpdateByCourseReportID mocks base method
func (m *MockReportResultUseCase) CreateOrUpdateByCourseReportID(ctx context.Context, reportResult *entity.ReportResult) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateByCourseReportID", ctx, reportResult)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateOrUpdateByCourseReportID indicates an expected call of CreateOrUpdateByCourseReportID
func (mr *MockReportResultUseCaseMockRecorder) CreateOrUpdateByCourseReportID(ctx, reportResult interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateByCourseReportID", reflect.TypeOf((*MockReportResultUseCase)(nil).CreateOrUpdateByCourseReportID), ctx, reportResult)
}
