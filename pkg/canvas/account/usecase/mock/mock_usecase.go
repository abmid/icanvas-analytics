// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	entity "github.com/abmid/icanvas-analytics/pkg/canvas/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccountUseCase is a mock of AccountUseCase interface
type MockAccountUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockAccountUseCaseMockRecorder
}

// MockAccountUseCaseMockRecorder is the mock recorder for MockAccountUseCase
type MockAccountUseCaseMockRecorder struct {
	mock *MockAccountUseCase
}

// NewMockAccountUseCase creates a new mock instance
func NewMockAccountUseCase(ctrl *gomock.Controller) *MockAccountUseCase {
	mock := &MockAccountUseCase{ctrl: ctrl}
	mock.recorder = &MockAccountUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccountUseCase) EXPECT() *MockAccountUseCaseMockRecorder {
	return m.recorder
}

// ListAccount mocks base method
func (m *MockAccountUseCase) ListAccount(accountID uint32) ([]entity.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAccount", accountID)
	ret0, _ := ret[0].([]entity.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAccount indicates an expected call of ListAccount
func (mr *MockAccountUseCaseMockRecorder) ListAccount(accountID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAccount", reflect.TypeOf((*MockAccountUseCase)(nil).ListAccount), accountID)
}
