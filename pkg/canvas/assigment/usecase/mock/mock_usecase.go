// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	entity "github.com/abmid/icanvas-analytics/pkg/canvas/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAssigmentUseCase is a mock of AssigmentUseCase interface
type MockAssigmentUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockAssigmentUseCaseMockRecorder
}

// MockAssigmentUseCaseMockRecorder is the mock recorder for MockAssigmentUseCase
type MockAssigmentUseCaseMockRecorder struct {
	mock *MockAssigmentUseCase
}

// NewMockAssigmentUseCase creates a new mock instance
func NewMockAssigmentUseCase(ctrl *gomock.Controller) *MockAssigmentUseCase {
	mock := &MockAssigmentUseCase{ctrl: ctrl}
	mock.recorder = &MockAssigmentUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAssigmentUseCase) EXPECT() *MockAssigmentUseCaseMockRecorder {
	return m.recorder
}

// ListAssigmentByCourseID mocks base method
func (m *MockAssigmentUseCase) ListAssigmentByCourseID(CourseID uint32) ([]entity.Assigment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAssigmentByCourseID", CourseID)
	ret0, _ := ret[0].([]entity.Assigment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAssigmentByCourseID indicates an expected call of ListAssigmentByCourseID
func (mr *MockAssigmentUseCaseMockRecorder) ListAssigmentByCourseID(CourseID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAssigmentByCourseID", reflect.TypeOf((*MockAssigmentUseCase)(nil).ListAssigmentByCourseID), CourseID)
}
