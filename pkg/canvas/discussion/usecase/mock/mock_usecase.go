// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	entity "github.com/abmid/icanvas-analytics/pkg/canvas/entity"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDiscussionUseCase is a mock of DiscussionUseCase interface
type MockDiscussionUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockDiscussionUseCaseMockRecorder
}

// MockDiscussionUseCaseMockRecorder is the mock recorder for MockDiscussionUseCase
type MockDiscussionUseCaseMockRecorder struct {
	mock *MockDiscussionUseCase
}

// NewMockDiscussionUseCase creates a new mock instance
func NewMockDiscussionUseCase(ctrl *gomock.Controller) *MockDiscussionUseCase {
	mock := &MockDiscussionUseCase{ctrl: ctrl}
	mock.recorder = &MockDiscussionUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDiscussionUseCase) EXPECT() *MockDiscussionUseCaseMockRecorder {
	return m.recorder
}

// ListDiscussionByCourseID mocks base method
func (m *MockDiscussionUseCase) ListDiscussionByCourseID(courseID uint32) ([]entity.Discussion, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListDiscussionByCourseID", courseID)
	ret0, _ := ret[0].([]entity.Discussion)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListDiscussionByCourseID indicates an expected call of ListDiscussionByCourseID
func (mr *MockDiscussionUseCaseMockRecorder) ListDiscussionByCourseID(courseID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListDiscussionByCourseID", reflect.TypeOf((*MockDiscussionUseCase)(nil).ListDiscussionByCourseID), courseID)
}
